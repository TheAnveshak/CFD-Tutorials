/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.1;

vertices
(   
    (0.5 0 10)
    (0.353553 0.353553 10)
    (0 0.5 10)
    (-0.353553 0.353553 10)
    (-0.5 0 10)
    (-0.353553 -0.353553 10)
    (0 -0.5 10)
    (0.353553 -0.353553 10)

    (0.5 0 -10)
    (0.353553 0.353553 -10)
    (0 0.5 -10)
    (-0.353553 0.353553 -10)
    (-0.5 0 -10)
    (-0.353553 -0.353553 -10)
    (0 -0.5 -10)
    (0.353553 -0.353553 -10)
);



blocks
(
    hex (0 8 1 9 2 10 3 11) (50 50 1000) simpleGrading (1 1 1)
    hex (4 12 5 13 6 14 7 15) (50 50 1000) simpleGrading (1 1 1)
);

edges
(
    arc 0 1 (0.433012 0.25 10)
    arc 1 2 (0.25 0.433012 10)
    arc 2 3 (-0.25 0.433012 10)
    arc 3 4 (-0.433012 0.25 10)
    arc 4 5 (-0.25 -0.433012 10)
    arc 5 6 (-0.4330120 -0.25 10)
    arc 6 7 (0.25 -0.4330120 10)
    arc 7 0 (0.4330120 -0.25 10)

    arc 8 9 (0.433012 0.25 -10)
    arc 9 10 (0.25 0.433012 -10)
    arc 10 11 (-0.25 0.433012 -10)
    arc 11 12 (-0.433012 0.25 -10)
    arc 12 13 (-0.25 -0.433012 -10)
    arc 13 14 (-0.4330120 -0.25 -10)
    arc 14 15 (0.25 -0.4330120 -10)
    arc 15 8 (0.4330120 -0.25 -10)
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (8 9 10 11 12 13 14 15)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (0 1 2 3 4 5 6 7)
        );
    }
    wall
    {
        type wall;
        faces
        (
            (0 1 9 8)
            (1 2 10 9)
            (2 3 11 10)
	    (3 4 12 11)
	    (4 5 13 12)
	    (5 6 14 13)
	    (6 7 15 14)
	    (7 0 8 15)
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            (0 1 2 3 4 5 6 7)
	    (8 9 10 11 12 13 14 15)
        );
    }
);

// ************************************************************************* //
